{"version":3,"sources":["components/Header.js","components/Todos.js","App.js"],"names":["Header","styles","work","activeTab","travel","View","style","header","TouchableOpacity","onPress","Text","tabsText","color","textDecorationLine","Todos","todos","setTodos","saveTodos","working","key","allTodos","done","Platform","OS","confirm","ans","prompt","text","Alert","alert","enteredText","deleteTodo","ok","console","log","ScrollView","contentContainerStyle","scrollView","Object","keys","map","todoHolder","backgroundColor","Checkbox","checkbox","value","onValueChange","changeChecked","undefined","flexDirection","marginRight","editTodo","activeOpacity","SCREEN_WIDTH","Dimensions","get","width","App","useState","setWorking","setText","loadedTodos","toSave","AsyncStorage","setItem","JSON","stringify","savedTodos","getItem","parse","useEffect","loadTodos","container","arg1","arg2","TextInput","returnKeyType","onSubmitEditing","newTodos","assign","Date","now","onChangeText","event","textInput","placeholder","StyleSheet","create","flex","alignItems","paddingHorizontal","paddingTop","justifyContent","fontSize","fontWeight","borderRadius","marginVertical","paddingVertical","gap","marginTop","height"],"mappings":"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","file":"static/js/app.160a7a63.chunk.js","sourcesContent":["import { Text, TouchableOpacity, View } from 'react-native'\n\nfunction Header({ styles, work, activeTab, travel }) {\n  return (\n    <View style={styles.header}>\n      <TouchableOpacity onPress={work}>\n        <Text\n          style={{\n            ...styles.tabsText,\n            color: activeTab('white', 'gray'),\n            textDecorationLine: activeTab('underline', 'none'),\n          }}>\n          Work\n        </Text>\n      </TouchableOpacity>\n      <TouchableOpacity onPress={travel}>\n        <Text\n          style={{\n            ...styles.tabsText,\n            color: activeTab('gray', 'white'),\n            textDecorationLine: activeTab('none', 'underline'),\n          }}>\n          Travel\n        </Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n\nexport default Header\n","import {\n  Alert,\n  ScrollView,\n  Text,\n  TouchableOpacity,\n  View,\n  Platform,\n} from 'react-native'\nimport Checkbox from 'expo-checkbox'\n\nfunction Todos({ styles, todos, setTodos, saveTodos, working }) {\n  async function changeChecked(key) {\n    const allTodos = { ...todos }\n    allTodos[key].done = !allTodos[key].done\n    await saveTodos(allTodos)\n  }\n  async function editTodo(key) {\n    if (Platform.OS === 'web') {\n      const ok = confirm(\"Are you sure you want to edit?\", \"lalo\")\n      if(ok){\n        const allTodos = { ...todos }\n        const ans = prompt(\"Edit\", `${allTodos[key].text}`)\n        allTodos[key].text = ans\n        await saveTodos(allTodos)\n      }\n    } else {\n      Alert.alert('Edit Todo', 'Are you sure you want to edit?', [\n        { text: 'Cancel', style: 'cancel' },\n        {\n          text: 'Edit',\n          onPress: async () => {\n            const allTodos = { ...todos }\n\n            Alert.prompt(\n              working ? 'Edit this task' : 'Edit location',\n              '',\n              [\n                { text: 'Cancel', style: 'cancel' },\n                {\n                  text: 'Save',\n                  onPress: async (enteredText) => {\n                    if (enteredText !== '') {\n                      allTodos[key].text = enteredText\n                      await saveTodos(allTodos)\n                    }\n                  },\n                },\n              ],\n              'plain-text',\n              `${allTodos[key].text}`\n            )\n          },\n        },\n      ])\n    }\n  }\n\n  const deleteTodo = async (key) => {\n    if (Platform.OS === 'web') {\n      const ok = confirm('Do you want to delete this todo?')\n      console.log(\"lalo\")\n      if (ok) {\n        console.log(\"lola\")\n        const allTodos = { ...todos }\n        delete allTodos[key]\n        console.log(allTodos)\n        await saveTodos(allTodos)\n      }\n    } else {\n      Alert.alert('Delete Todo', 'Are you sure?', [\n        { text: 'Cancel' },\n        {\n          text: 'Delete',\n          style: 'destructive',\n          onPress: async () => {\n            const allTodos = { ...todos }\n            delete allTodos[key]\n            setTodos(allTodos)\n            await saveTodos(allTodos)\n          },\n        },\n      ])\n    }\n  }\n\n  return (\n    <ScrollView contentContainerStyle={styles.scrollView}>\n      {Object.keys(todos).map((key) => {\n        return todos[key].work === working ? (\n          <View\n            style={{\n              ...styles.todoHolder,\n              backgroundColor: todos[key].done ? 'royalblue' : '#202020',\n            }}\n            key={key}>\n            <Checkbox\n              style={styles.checkbox}\n              value={todos[key].done}\n              onValueChange={() => {\n                changeChecked(key)\n              }}\n              color={todos[key].done ? 'rgb(37, 76, 193)' : undefined}\n            />\n            <Text\n              style={{\n                textDecorationLine: todos[key].done ? 'line-through' : null,\n                color: todos[key].done ? 'gray' : 'white',\n              }}>\n              {todos[key].text}\n            </Text>\n            <View style={{ flexDirection: 'row' }}>\n              <TouchableOpacity\n                style={{ marginRight: '10%' }}\n                onPress={() => editTodo(key)}>\n                <Text\n                  style={{\n                    color: todos[key].done ? 'gray' : 'white',\n                  }}>\n                  Edit\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity activeOpacity=\"0.5\">\n                <Text\n                  onPress={() => deleteTodo(key)}\n                  style={{\n                    color: todos[key].done ? 'gray' : 'white',\n                  }}>\n                  Delete\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        ) : null\n      })}\n    </ScrollView>\n  )\n}\n\nexport default Todos\n","import { StatusBar } from 'expo-status-bar'\nimport { useEffect, useState } from 'react'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n/* import { Fontisto } from '@expo/vector-icons' */\nimport { StyleSheet, Dimensions, View, TextInput } from 'react-native'\nimport Header from './components/Header'\nimport Todos from './components/Todos'\n\nconst { width: SCREEN_WIDTH } = Dimensions.get('window')\n\nexport default function App() {\n  const [working, setWorking] = useState(true)\n  const [text, setText] = useState('')\n\n  function work() {\n    setWorking(true)\n    setText('')\n  }\n  function travel() {\n    setWorking(false)\n    setText('')\n  }\n  const activeTab = (arg1, arg2) => {\n    return working ? arg1 : arg2\n  }\n\n  const onChangeText = (event) => {\n    setText(event)\n  }\n  const [todos, setTodos] = useState({})\n  const submitTodo = () => {\n    if (text === '') {\n      return\n    }\n    const newTodos = Object.assign({}, todos, {\n      [Date.now()]: { text, work: working, done: false },\n    })\n    saveTodos(newTodos)\n    setText('')\n  }\n\n  const saveTodos = async (toSave) => {\n    await AsyncStorage.setItem('todos', JSON.stringify(toSave))\n  }\n\n  let loadedTodos\n  async function loadTodos() {\n    const savedTodos = await AsyncStorage.getItem('todos')\n    if (savedTodos) {\n      loadedTodos = JSON.parse(savedTodos)\n      setTodos(loadedTodos)\n    }\n  }\n\n  useEffect(() => {\n    loadTodos()\n  }, [todos])\n\n  return (\n    <View style={styles.container}>\n      <Header\n        styles={styles}\n        work={work}\n        activeTab={activeTab}\n        travel={travel}\n      />\n      <TextInput\n        returnKeyType=\"done\"\n        onSubmitEditing={submitTodo}\n        value={text}\n        onChangeText={onChangeText}\n        style={styles.textInput}\n        placeholder={\n          working ? 'Write your work list' : 'Write your travel list'\n        }></TextInput>\n      <Todos\n        styles={styles}\n        todos={todos}\n        setTodos={setTodos}\n        working={working}\n        saveTodos={saveTodos}\n      />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'black',\n    alignItems: 'center',\n  },\n  header: {\n    flexDirection: 'row',\n    paddingHorizontal: 30,\n    paddingTop: 100,\n    width: SCREEN_WIDTH,\n    justifyContent: 'space-between',\n  },\n  tabsText: {\n    color: 'white',\n    fontSize: 30,\n    fontWeight: '500',\n  },\n  textInput: {\n    width: '95%',\n    backgroundColor: 'white',\n    borderRadius: 25,\n    marginVertical: 15,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    fontSize: 17,\n  },\n  scrollView: {\n    alignItems: 'center',\n    width: SCREEN_WIDTH,\n    paddingHorizontal: 15,\n    gap: 50,\n  },\n  todoHolder: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 17,\n    paddingHorizontal: 10,\n    borderRadius: 10,\n    marginTop: 10,\n  },\n  checkbox: {\n    height: 20,\n    width: 20,\n    borderRadius: 5,\n  },\n})\n"],"sourceRoot":""}